---
- hosts: localhost
  ignore_errors: yes
  vars_files:
    - vars/main.yaml
  roles:
    - instance-groups

- hosts: allnodes
  ignore_errors: yes
  vars_files:
    - vars/main.yaml
  roles:
    - rhsm-unregister

- hosts: localhost
  user: root
  become: false
  ignore_errors: yes
  vars_files:
    - vars/main.yaml
  tasks:
    - name: Delete all added VMs
      vmware_guest:
        hostname: "{{ vcenter_host }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: False
        name: "{{ hostvars[item].inventory_hostname }}"
        datacenter: "{{ vcenter_datacenter }}"
        cluster: "{{ vcenter_cluster }}"
        resource_pool: "{{ vcenter_resource_pool }}"
        folder: "/{{ vcenter_datacenter }}/vm/{{ vcenter_folder }}"
        state: absent
        force: true
      with_items: "{{ groups['allnodes'] }}"

    - name: Get current user home dir
      shell: 'eval echo "~$USER"'
      register: home_dir
    - name: Set hosts files paths
      set_fact:
        home_hosts_file: "{{ home_dir.stdout_lines[0] + '/.ssh/config' }}"
        system_hosts_file: "/etc/hosts"
    - name: Check 'write' permissions for system hosts file
      stat:
        path: "{{ system_hosts_file }}"
      register: stat_system_hosts

    - name: Update system hosts file if writeable
      lineinfile:
        dest: "{{ system_hosts_file }}"
        state: absent
        regexp: "{{ hostvars[item].inventory_hostname }}"
        create: true
      with_items: "{{ groups['allnodes'] }}"
      when: "stat_system_hosts.stat.writeable"
    - name: Update user's SSH hosts file
      lineinfile:
        dest: "{{ home_hosts_file }}"
        state: present
        line: "Host obsolete-{{ item }}"
        regexp: "Host {{ item }}"
        create: true
        mode: '644'
      with_items: "{{ groups['allnodes'] }}"
